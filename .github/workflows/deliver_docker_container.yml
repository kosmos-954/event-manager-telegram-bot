name: Deliver-container-to-hosts

on:
  push:
    branches:
      - "prerelease"
      - "main"
    paths:
      - 'cfg/**'
      - 'iaac/ansible/playbooks/docker-compose.yml'
      - 'iaac/ansible/templates/**'
  registry_package:
  workflow_run:
    workflows:
      - "Build-and-deploy-container"
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deliver-container:
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "call action"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1
      - name: "Print result"
        run: |
          echo "id: ${{ steps.last_release.outputs.id }}"
          echo "name: ${{ steps.last_release.outputs.name }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "created_at: ${{ steps.last_release.outputs.created_atd }}"
          echo "draft: ${{ steps.last_release.outputs.draft }}"
          echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.last_release.outputs.tag_name }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=prerelease,enable=${{ github.ref == format('refs/heads/{0}', 'prerelease') }}

      - name: Install docker and docker-compose on target instance
        run: |
          ansible-galaxy install -r iaac/ansible/roles/requirements.yml
          eval "$(ssh-agent -s)"
          echo -n ${{ secrets.DEPLOY_SSH_KEY }} | base64 -d | ssh-add -
          ansible-playbook --user ${{ secrets.DEPLOY_SSH_USER }} -i iaac/ansible/inventory \
          iaac/ansible/playbooks/docker-compose.yml --extra-vars "\
          target_host=\"${{ secrets.DOCKER_HOST_ADDRESS }}\" \
          ansible_sudo_pass=\"${{ secrets.DEPLOY_USER_PASSWORD }}\" \
          docker_compose_install_fq_link=\"/usr/bin/docker-compose\" \
          docker_image_version=\"${{ github.ref_name }}\" \
          TELEGRAM_BOT_TOKEN=\"${{ secrets.TELEGRAM_BOT_TOKEN }}\" \
          PAYMENT_PROVIDER_TOKEN=\"${{ secrets.PAYMENT_PROVIDER_TOKEN }}\"
          telegram_admin_ids_list=\"${{ vars.TELEGRAM_ADMIN_IDS_LIST }}\""