name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install libssl-dev
        run: sudo apt-get install libssl-dev pkg-config -y

      - name: Build
        env:
          RUSTFLAGS: "-C target-feature=-crt-static"
        run: cargo build --release

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/event-manager-telegram-bot
          asset_name: event-manager-telegram-bot
          asset_content_type: application/octet-stream

      - name: Run latest-tag
        uses: EndBug/latest-tag@latest
        with:
          description: Latest release
          force-branch: true

#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}