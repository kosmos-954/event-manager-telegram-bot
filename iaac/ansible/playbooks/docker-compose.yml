- hosts: '{{ env }}'
  gather_facts: yes
  become: true
  tasks:
    - name: Copy config file for current version
      copy:
        src: event-manager-telegram-bot.toml
        dest: "/usr/local/etc/event-manager-telegram-bot.{{ docker_image_version }}.toml"

    - name: Inline config file for current version
      lineinfile:
        path: "/usr/local/etc/event-manager-telegram-bot.{{ docker_image_version }}.toml"
        regexp: "{{ item.key }} = .*"
        line: "{{ item.key }} = {{ item.value }}"
        state: present
      with_dict:
        telegram_bot_token: "{{ TELEGRAM_BOT_TOKEN }}"
        telegram_admin_ids_list: "{{ PAYMENT_PROVIDER_TOKEN }}"
        payment_provider_token: "{{ payment_provider_token }}"
        admin_ids: "{{ telegram_admin_ids_list }}"
        public_lists: 'false'
        automatic_blacklisting: 'false'
        drop_events_after_hours: 48
        delete_from_black_list_after_days: 30
        too_late_to_cancel_hours: 1
        event_list_page_size: 20
        event_page_size: 40
        presence_page_size: 40
        cancel_future_reservations_on_ban: 'false'
        limit_bulk_notifications_per_second: 20
        cleanup_old_events: 'true'
        mailing_hours: '08:00 +02:00..21:00 +02:00'
        listen_address: "0.0.0.0"
        listen_port: 3000

    - name: Create dir
      file:
        path: "/opt/{{ docker_image_version }}/data"
        state: directory
        recurse: yes
        owner: docker
        group: docker

    - name: Generate docker-compose file for current version
      template:
        src: docker-compose.yml.j2
        dest: "/opt/{{ docker_image_version }}/docker-compose.{{ docker_image_version }}.yml"

    - name: Restart docker-compose for current version
      docker_compose:
        project_src: "/opt/{{ docker_image_version }}"
        state: present
        recreate: always
        pull: yes
        remove_orphans: yes
        files:
          - "docker-compose.{{ docker_image_version }}.yml"
